{"version":3,"sources":["utils.js","WebAPI.js","redux/reducers/postReducer.js","pages/HomePage/HomePage.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","pages/RegisterPage/RegisterPage.js","components/Header/Header.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","pages/PostListPage/PostListPage.js","pages/AboutPage/AboutPage.js","pages/EditPostPage/EditPostPage.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","postReducer","createSlice","name","initialState","isLoadingPost","post","posts","postsList","postNumber","isDeletePostSuccess","newPostResponse","errorMessage","reducers","setIsLoadingPost","state","action","payload","setPost","setPosts","setPostsList","setPostNumber","setNewPostResponse","setErrorMessage","setIsDeletePostSuccess","actions","getPost","id","dispatch","fetch","then","res","json","getPostAPI","getPosts","getPostsList","postPerPage","page","getPostsListAPI","headers","get","data","newPost","title","body","userId","method","JSON","stringify","newPostAPI","ok","message","toString","deletePost","postId","catch","err","console","log","deletePostAPI","updatePost","updatePostAPI","Root","styled","div","PostContainer","PostTitle","Link","PostDate","PostEdit","button","PostDelete","Loading","Post","user","to","onClick","Date","createdAt","toLocaleString","HomePage","useDispatch","isLoading","useSelector","store","users","useEffect","map","userReducer","setUser","register","nickname","username","password","registerAPI","login","loginAPI","getUser","getMe","response","FormContainer","FormBlock","form","FormTitle","h1","FormInput","input","SubmitButton","ErrorMessage","LoginPage","useState","setUsername","setPassword","history","useHistory","onSubmit","push","value","onChange","e","target","type","RegisterPage","setNickname","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","location","useLocation","pathname","PostHead","PostBody","PostPage","useParams","FormItem","FormTextArea","textarea","NewPostPage","setTitle","setBody","cols","rows","PageBlock","Home","PageUp","PageDown","End","PageNumber","Page","setPage","totalPages","changePage","PostListPage","Math","ceil","AboutContainer","AboutHead","AboutBody","AboutPage","EditPostPage","App","exact","path","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.251ab68e.chunk.js","sourcesContent":["const TOKEN_NAME = 'token'\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token)\n}\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME)\n}\n","import { getAuthToken } from \"./utils\"\n\nconst BASE_URL = 'https://student-json-api.lidemy.me'\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  )\n}\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`)\n    .then((res) => \n      res.json()\n    )\n}\n\nexport const getPostsList = (postPerPage, page) => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc&_limit=${postPerPage}&_page=${page}`)\n}\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    })\n  })\n  .then(res => res.json())\n}\n\nexport const register = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    })\n  })\n  .then(res => res.json())\n}\n\nexport const getMe = () => {\n  const token = getAuthToken()\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      'authorization': `Bearer ${token}`\n    },\n  })\n  .then(res => res.json())\n}\n\nexport const newPost = (title, body) => {\n  let token = null\n  if(getAuthToken()) {\n    token = getAuthToken()\n  }\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    })\n  })\n  .then(res => res.json())\n}\n\nexport const deletePost = (postId) => {\n  const token = getAuthToken()\n  return fetch(`${BASE_URL}/posts/${postId}`, {\n    method: 'DELETE',\n    headers: {\n      'authorization': `Bearer ${token}`\n    },\n  }).catch(err => console.log(err))\n}\n\nexport const updatePost = (title, body, postId) => {\n  let token = null\n  if(getAuthToken()) {\n    token = getAuthToken()\n  }\n  return fetch(`${BASE_URL}/posts/${postId}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    })\n  })\n  .then(res => res.json())\n}","import { createSlice } from '@reduxjs/toolkit';\nimport { \n  getPost as getPostAPI, \n  newPost as newPostAPI,\n  getPosts as getPostsAPI,\n  getPostsList as getPostsListAPI,\n  deletePost as deletePostAPI,\n  updatePost as updatePostAPI,\n} from '../../WebAPI'\n\nexport const postReducer = createSlice({\n  name: 'posts',\n  initialState: {\n    isLoadingPost: false,\n    post: null,\n    posts: null,\n    postsList: null,\n    postNumber: 0,\n    isDeletePostSuccess: false,\n\n    newPostResponse: null,\n    errorMessage: null,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n\n    setPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n\n    setPostsList: (state, action) => {\n      state.postsList = action.payload;\n    },\n\n    setPostNumber: (state, action) => {\n      state.postNumber = action.payload;\n    },\n\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload\n    },\n\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload\n    },\n\n    setIsDeletePostSuccess: (state, action) => {\n      state.isDeletePostSuccess = action.payload\n    }\n  },\n});\n\nexport const { \n  setIsLoadingPost, \n  setPost, \n  setPosts,\n  setPostsList,\n  setPostNumber,\n  setNewPostResponse, \n  setErrorMessage,\n  setIsDeletePostSuccess, \n} = postReducer.actions;\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true))\n  return getPostAPI(id).then((res) => {\n    dispatch(setPost(res))\n    dispatch(setIsLoadingPost(false))\n    return res\n  })\n};\n\nexport const getPosts = () => (dispatch) => {\n  dispatch(setIsLoadingPost(true))\n  getPostsAPI().then((res) => {\n    dispatch(setPosts(res))\n    dispatch(setIsLoadingPost(false))\n  })\n};\n\nexport const getPostsList = (postPerPage, page) => (dispatch) => {\n  dispatch(setIsLoadingPost(true))\n  getPostsListAPI(postPerPage, page).then((res) => {\n    dispatch(setPostNumber(res.headers.get('x-total-count')))\n    return res.json()\n  }).then(data => {\n    dispatch(setPostsList(data))\n    dispatch(setIsLoadingPost(false))\n  })\n};\n\nexport const newPost = (title, body, userId) => (dispatch) => {\n  if(!userId) return\n  return newPostAPI(title, body).then((res) => {\n    if(res.ok === 0) {\n      dispatch(setErrorMessage(res.message.toString()))\n    } \n    dispatch(setNewPostResponse(res))\n    return res\n  })\n}\n\nexport const deletePost = (postId) => (dispatch) => {\n  return deletePostAPI(postId).then(() => {\n    dispatch(setIsDeletePostSuccess(true))\n  })\n}\n\nexport const updatePost = (title, body, postId, userId) => (dispatch) => {\n  if(!userId) return\n  return updatePostAPI(title, body, postId).then((res) => {\n    if(res.ok === 0) {\n      dispatch(setErrorMessage(res.message.toString()))\n    } \n    dispatch(setNewPostResponse(res))\n    return res\n  })\n}\n\nexport default postReducer.reducer;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\nimport { getPosts, deletePost, setIsDeletePostSuccess } from '../../redux/reducers/postReducer'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst Root = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(12, 34, 56, 0.2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.2);\n`\n\nconst PostEdit = styled.button``\n\nconst PostDelete = styled.button``\n\nconst Loading = styled.div`\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  top: 64px;\n  left: 50%;\n  right: 50%;\n  font-size: 24px;\n  background: black;\n  color: white;\n  width: 120px;\n`\n\nfunction Post({post, user, dispatch}) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <div>\n        {user && (user.id === post.userId && \n          <>\n            <Link to={`/edit-post/${post.id}`} >\n              <PostEdit>編輯</PostEdit>\n            </Link>\n            <PostDelete onClick={() => {\n              dispatch(deletePost(post.id))\n            }}>\n              刪除\n            </PostDelete>\n          </>\n        )}\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      </div>\n    </PostContainer>\n  )\n}\n\nexport default function HomePage() {\n  const dispatch = useDispatch()\n  const isLoading = useSelector(store => store.posts.isLoadingPost)\n  const posts = useSelector(store => store.posts.posts)\n  const user = useSelector(store => store.users.user)\n  let isDeletePostSuccess = useSelector(store => store.posts.isDeletePostSuccess)\n\n  useEffect(() => {\n    dispatch(getPosts())\n    dispatch(setIsDeletePostSuccess(false))\n  }, [dispatch, isDeletePostSuccess])\n\n  return (\n    <Root>\n      {isLoading && <Loading>Loading...</Loading>}\n      {posts && posts.map((post) => (\n        <Post key={post.id} post={post} user={user} dispatch={dispatch} />\n      ))}\n    </Root>\n  )\n}","import { createSlice } from '@reduxjs/toolkit';\nimport { \n  getMe, \n  login as loginAPI,\n  register as registerAPI\n} from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\n\nexport const userReducer = createSlice({\n  name: 'users',\n  initialState: {\n    user: null,\n    errorMessage: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload\n    },\n  },\n});\n\nexport const { setUser, setErrorMessage } = userReducer.actions;\n\nexport const register = (nickname, username, password) => (dispatch) => {\n  return registerAPI(nickname, username, password).then((data) => {\n    if(data.ok === 0) {\n      return dispatch(setErrorMessage(data.message))\n    }\n    setAuthToken(data.token)\n  })\n}\n\nexport const login = (username, password) => (dispatch) => {\n  return loginAPI(username, password).then((data) => {\n    if(data.ok === 0) {\n      return dispatch(setErrorMessage(data.message))\n    }\n    setAuthToken(data.token)\n  })\n}\n\nexport const getUser = () => (dispatch) => {\n  return getMe().then((response) => {\n    if(response.ok === 1) {\n      dispatch(setUser(response.data))\n      return response\n    } else {\n      setAuthToken(null)\n      dispatch(setErrorMessage(response.toString()))\n      return response\n    }\n  })\n};\n\nexport default userReducer.reducer;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { getAuthToken } from '../../utils';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getUser, setErrorMessage, login } from '../../redux/reducers/userReducer';\n\nconst FormContainer = styled.div`\n  margin: 100px auto;\n  width: 550px;\n}\n`\n\nconst FormBlock = styled.form`\n  width: 450px;\n  height: 300px;\n  padding: 60px;\n  border: solid 1px #000000;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst FormTitle = styled.h1`\n  font-size: 36px;\n  text-align: center;\n`\n\nconst FormInput = styled.input`\n  border: solid 1px #d0d0d0;\n  width: 287px;\n  height: 23px;\n  margin: 10px 20px;\n`;\n\nconst SubmitButton = styled.button`\n  width: 92px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: black;\n  color: white;\n  font-size: 15px;\n  margin-top: 20px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const errorMessage = useSelector(store => store.users.errorMessage)\n\n  const handleSubmit = () => {\n    dispatch(setErrorMessage(null))\n    dispatch(login(username, password)).then(() => {\n      if(getAuthToken()) {\n        dispatch(getUser()).then((res) => {\n          if(res.ok === 1) return history.push(\"/\")\n        })\n      }\n    })\n  }\n  return (\n    <FormContainer>\n      <FormBlock onSubmit={handleSubmit}>\n        <FormTitle>登入</FormTitle>\n        <div>\n          Username:\n          <FormInput value={username} onChange={(e) => setUsername(e.target.value)} />\n        </div>\n        <div>\n          Password:\n          <FormInput type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </div>\n        <SubmitButton>登入</SubmitButton>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </FormBlock>\n    </FormContainer>\n  )\n}","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { getAuthToken } from '../../utils';\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getUser, setErrorMessage, register } from '../../redux/reducers/userReducer';\n\nconst FormContainer = styled.div`\n  margin: 100px auto;\n  width: 550px;\n}\n`\n\nconst FormBlock = styled.form`\n  width: 450px;\n  height: 300px;\n  padding: 60px;\n  border: solid 1px #000000;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst FormTitle = styled.h1`\n  font-size: 36px;\n  text-align: center;\n`\n\nconst FormInput = styled.input`\n  border: solid 1px #d0d0d0;\n  width: 287px;\n  height: 23px;\n  margin: 10px 20px;\n`;\n\nconst SubmitButton = styled.button`\n  width: 92px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: black;\n  color: white;\n  font-size: 15px;\n  margin-top: 20px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`\n\nexport default function RegisterPage() {\n  const [nickname, setNickname] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const errorMessage = useSelector(store => store.users.errorMessage)\n\n  const handleSubmit = () => {\n    setErrorMessage(null)\n    dispatch(register(nickname, username, password)).then(() => {\n      if(getAuthToken()) {\n        dispatch(getUser()).then((res) => {\n          if(res.ok === 1) return history.push(\"/\")\n        })\n      }\n    })\n  }\n\n  return (\n    <FormContainer>\n      <FormBlock onSubmit={handleSubmit}>\n        <FormTitle>註冊</FormTitle>\n        <div>\n          Username:\n          <FormInput value={username} onChange={(e) => setUsername(e.target.value)} />\n        </div>\n        <div>\n          Password:\n          <FormInput type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </div>\n        <div>\n          Nickname:\n          <FormInput value={nickname} onChange={(e) => setNickname(e.target.value)} />\n        </div>\n        <SubmitButton>註冊</SubmitButton>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </FormBlock>\n    </FormContainer>\n  )\n}","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { setAuthToken } from '../../utils';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getUser, setUser } from '../../redux/reducers/userReducer'\n\nconst HeaderContainer = styled.div`\n  background: white;\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n`\n\nconst Brand = styled(Link)`\n  font-size: 28px;\n  color: black;\n  text-decoration: none;\n  font-weight: bold;\n`\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) => props.$active && `background: rgba(0, 0, 0, 0.1);`}\n`\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`\n\nexport default function Header() {\n  const location = useLocation()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const user = useSelector(store => store.users.user)\n\n  const handleLogout = () => {\n    setAuthToken('')\n    dispatch(setUser(null))\n    if(location.pathname !== \"/\") {\n      history.push(\"/\")\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getUser())\n  }, [dispatch])\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand to=\"/\" $active={location.pathname === '/'}>Derek's Blog</Brand>\n        <NavbarList>\n          \n          <Nav to=\"/post-list\" $active={location.pathname === '/post-list'}>文章列表</Nav>\n          {user && <Nav to=\"/new-post\" $active={location.pathname === '/new-post'}>發布文章</Nav>}\n          <Nav to=\"/about\" $active={location.pathname === '/about'}>關於我</Nav>\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        <Nav to=\"/register\" $active={location.pathname === '/register'}>註冊</Nav>\n        {!user && <Nav to=\"/login\" $active={location.pathname === '/login'}>登入</Nav>}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  )\n}\n","import React, { useEffect} from 'react';\nimport styled from 'styled-components';\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport { getPost, deletePost, setIsDeletePostSuccess } from '../../redux/reducers/postReducer'\nimport { getUser } from '../../redux/reducers/userReducer'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst Root = styled.div`\n  max-width: 800px;\n  margin: 64px auto;\n`\n\nconst PostContainer = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst PostHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  border-bottom: 1px solid rgba(12, 34, 56, 0.2);\n  padding: 20px;\n`\n\nconst PostTitle = styled.div`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.2);\n`\n\nconst PostEdit = styled.button``\n\nconst PostDelete = styled.button``\n\nconst PostBody = styled.div``\n\nconst Loading = styled.div`\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  top: 64px;\n  left: 50%;\n  right: 50%;\n  font-size: 24px;\n  background: black;\n  color: white;\n  width: 120px;\n`\n\nfunction Post({post, user, dispatch, history}) {\n  return (\n    <PostContainer>\n      <PostHead>\n        <PostTitle>{post.title}</PostTitle>\n        <div>\n          {user && (user.id === post.userId && \n            <>\n              <Link to={`/edit-post/${post.id}`} >\n                <PostEdit>編輯</PostEdit>\n              </Link>\n              <PostDelete onClick={() => {\n                dispatch(deletePost(post.id)).then(() => {\n                  history.push(\"/\")\n                })\n              }}>\n                刪除\n              </PostDelete>\n            </>\n          )}\n          <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n        </div>\n      </PostHead>\n      <PostBody>{post.body}</PostBody>\n    </PostContainer>\n  )\n}\n\nexport default function PostPage() {\n  let {id} = useParams()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const isLoading = useSelector(store => store.posts.isLoadingPost)\n  const post = useSelector(store => store.posts.post)\n  const user = useSelector(store => store.users.user)\n  let isDeletePostSuccess = useSelector(store => store.posts.isDeletePostSuccess)\n\n  useEffect(() => {\n    dispatch(getUser())\n    dispatch(getPost(id))\n    dispatch(setIsDeletePostSuccess(false))\n  }, [id, dispatch, isDeletePostSuccess])\n  \n  return (\n    <Root>\n      {isLoading && <Loading>Loading...</Loading>}\n      {post && post.map((data, id) => (\n        <Post key={id} post={data} user={user} dispatch={dispatch} history={history} />\n      ))}\n    </Root>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { newPost, setErrorMessage } from '../../redux/reducers/postReducer'\nimport { getUser } from '../../redux/reducers/userReducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\n\nconst FormContainer = styled.div`\n  margin: 100px auto;\n  width: 550px;\n`\n\nconst FormBlock = styled.form`\n  width: 450px;\n  height: 400px;\n  padding: 60px;\n  border: solid 1px #000000;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst FormTitle = styled.h1`\n  font-size: 36px;\n  text-align: center;\n`\n\nconst FormItem = styled.div`\n  display: flex;\n  \n`\n\nconst FormInput = styled.input`\n  border: solid 1px #d0d0d0;\n  width: 287px;\n  height: 23px;\n  margin: 10px 20px;\n`;\n\nconst FormTextArea = styled.textarea`\n  border: solid 1px #d0d0d0;\n  margin: 10px 20px;\n`\n\nconst SubmitButton = styled.button`\n  width: 92px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: black;\n  color: white;\n  font-size: 15px;\n  margin-top: 20px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`\n\nexport default function NewPostPage() {\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const errorMessage = useSelector(store => store.posts.errorMessage)\n  const userId = useSelector(store => store.users.user)\n\n  const handleSubmit = () => {\n    dispatch(setErrorMessage(null))\n    dispatch(newPost(\n      title,\n      body,\n      userId,\n    )).then((newPostResponse) => {\n      if(newPostResponse && newPostResponse.id) {\n        history.push(\"/post/\" + newPostResponse.id)\n      }\n    })\n  }\n\n  useEffect(() => {\n    dispatch(getUser()).then((res) => {\n      if(res.ok !== 1) {\n        history.push(\"/\")\n      }\n    })\n  }, [dispatch, history])\n\n  return (\n    <FormContainer>\n      <FormBlock onSubmit={handleSubmit}>\n        <FormTitle>新增文章</FormTitle>\n        <div>\n          Title:\n          <FormInput value={title} onChange={(e) => setTitle(e.target.value)} />\n        </div>\n        <FormItem>\n          Content:\n          <FormTextArea cols=\"33\" rows=\"12\" value={body} onChange={(e) => setBody(e.target.value)} />\n        </FormItem>\n        <SubmitButton>發布</SubmitButton>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </FormBlock>\n    </FormContainer>\n  )\n}","import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\nimport { getPostsList, deletePost, setIsDeletePostSuccess } from '../../redux/reducers/postReducer'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst Root = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(12, 34, 56, 0.2);\n  padding: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`\n\nconst PostEdit = styled.button``\n\nconst PostDelete = styled.button``\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.2);\n`\n\nconst PageBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n`\n\nconst Home = styled.div`\n  cursor: pointer;\n  margin: 0 5px;\n  &:before {\n    content: \"<<\";\n  }\n`\n\nconst PageUp = styled.div`\n  cursor: pointer;\n  margin: 0 5px;\n  &:before {\n    content: \"<\";\n  }\n`\n\nconst PageDown = styled.div`\n  cursor: pointer;\n  margin: 0 5px;\n  &:before {\n    content: \">\";\n  }\n`\n\nconst End = styled.div`\n  cursor: pointer;\n  margin: 0 5px;\n  &:before {\n    content: \">>\";\n  }\n`\n\nconst PageNumber = styled.div``\n\nconst Loading = styled.div`\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  top: 64px;\n  left: 50%;\n  right: 50%;\n  font-size: 24px;\n  background: black;\n  color: white;\n  width: 120px;\n`\n\nfunction Post({post, user, dispatch}) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <div>\n        {user && (user.id === post.userId && \n          <>\n            <Link to={`/edit-post/${post.id}`} >\n              <PostEdit>編輯</PostEdit>\n            </Link>\n            <PostDelete onClick={() => {\n              dispatch(deletePost(post.id))\n            }}>\n              刪除\n            </PostDelete>\n          </>\n        )}\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      </div>\n    </PostContainer>\n  )\n}\n\nfunction Page({page, setPage, totalPages}) {\n\n  function changePage(target) {\n    if(target === 'home') {\n      setPage(1)\n    } else if(target === 'end') {\n      setPage(totalPages)\n    } else if(target === 'pageup' && page > 1) {\n      setPage(page - 1)\n    } else if(target === 'pagedown' && page < totalPages) {\n      setPage(page + 1)\n    }\n  }\n\n  return (\n    <PageBlock>\n      <Home onClick={() => changePage('home', page, setPage, totalPages)} />\n      <PageUp onClick={() => changePage('pageup', page, setPage, totalPages)} />\n      <PageNumber>{page} / {totalPages}</PageNumber>\n      <PageDown onClick={() => changePage('pagedown', page, setPage, totalPages)} />\n      <End onClick={() => changePage('end', page, setPage, totalPages)} />\n    </PageBlock>\n  )\n}\n\nexport default function PostListPage() {\n  const [page, setPage] = useState(1)\n  const dispatch = useDispatch()\n  const isLoading = useSelector(store => store.posts.isLoadingPost)\n  const postNumber = useSelector(store => store.posts.postNumber)\n  const postsList = useSelector(store => store.posts.postsList)\n  const user = useSelector(store => store.users.user)\n  let isDeletePostSuccess = useSelector(store => store.posts.isDeletePostSuccess)\n  const postPerPage = 5\n  let totalPages = Math.ceil( postNumber / postPerPage )\n\n  useEffect(() => {\n    dispatch(getPostsList(postPerPage, page))\n    dispatch(setIsDeletePostSuccess(false))\n    //getUser 抓出 res.data.id 用來篩編輯＆刪除\n  }, [page, dispatch, isDeletePostSuccess])\n\n  return (\n    <Root>\n      {isLoading && <Loading>Loading...</Loading>}\n      {postsList && postsList.map((post) => (\n        <Post key={post.id} post={post} user={user} dispatch={dispatch} />\n      ))}\n      {!isLoading && <Page page={page} setPage={setPage} totalPages={totalPages} />}\n    </Root>\n  )\n}","import styled from 'styled-components';\n\nconst Root = styled.div`\n  max-width: 800px;\n  margin: 64px auto;\n`\n\nconst AboutContainer = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst AboutHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  border-bottom: 1px solid rgba(12, 34, 56, 0.2);\n  padding: 20px;\n  font-size: 24px;\n`\n\nconst AboutBody = styled.div``\n\nexport default function AboutPage() {\n  return (\n    <Root>\n      <AboutContainer>\n        <AboutHead>關於我</AboutHead>\n        <AboutBody>\n          大家好，歡迎來到我的部落格\n        </AboutBody>\n      </AboutContainer>\n    </Root>\n  )\n}","import React, { useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport { getPost, setErrorMessage, updatePost } from '../../redux/reducers/postReducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams, useHistory } from \"react-router-dom\";\n\nconst FormContainer = styled.div`\n  margin: 100px auto;\n  width: 550px;\n`\n\nconst FormBlock = styled.form`\n  width: 450px;\n  height: 400px;\n  padding: 60px;\n  border: solid 1px #000000;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst FormTitle = styled.h1`\n  font-size: 36px;\n  text-align: center;\n`\n\nconst FormItem = styled.div`\n  display: flex;\n  \n`\n\nconst FormInput = styled.input`\n  border: solid 1px #d0d0d0;\n  width: 287px;\n  height: 23px;\n  margin: 10px 20px;\n`;\n\nconst FormTextArea = styled.textarea`\n  border: solid 1px #d0d0d0;\n  margin: 10px 20px;\n`\n\nconst SubmitButton = styled.button`\n  width: 92px;\n  height: 40px;\n  border-radius: 3px;\n  background-color: black;\n  color: white;\n  font-size: 15px;\n  margin-top: 20px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`\n\nexport default function EditPostPage() {\n  let { id } = useParams()\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const errorMessage = useSelector(store => store.posts.errorMessage)\n  const userId = useSelector(store => store.users.user)\n\n  const handleSubmit = () => {\n    dispatch(setErrorMessage(null))\n    dispatch(updatePost(\n      title,\n      body,\n      id,\n      userId,\n    )).then((newPostResponse) => {\n      if(newPostResponse && newPostResponse.id) {\n        history.push(\"/post/\" + newPostResponse.id)\n      }\n    })\n  }\n\n  useEffect(() => {\n    dispatch(getPost(id)).then((post) => {\n      setTitle(post[0].title)\n      setBody(post[0].body)\n    })\n  }, [dispatch, id])\n\n  return (\n    <FormContainer>\n      <FormBlock onSubmit={handleSubmit}>\n        <FormTitle>編輯文章</FormTitle>\n        <div>\n          Title:\n          <FormInput value={title} onChange={(e) => setTitle(e.target.value)} />\n        </div>\n        <FormItem>\n          Content:\n          <FormTextArea cols=\"33\" rows=\"12\" value={body} onChange={(e) => setBody(e.target.value)} />\n        </FormItem>\n        <SubmitButton>發布</SubmitButton>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      </FormBlock>\n    </FormContainer>\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport HomePage from '../../pages/HomePage'\nimport LoginPage from '../../pages/LoginPage'\nimport RegisterPage from '../../pages/RegisterPage'\nimport Header from '../Header/Header'\nimport PostPage from '../../pages/PostPage'\nimport NewPostPage from '../../pages/NewPostPage'\nimport PostListPage from '../../pages/PostListPage'\nimport About from '../../pages/AboutPage'\nimport EditPostPage from '../../pages/EditPostPage'\n\nconst Root = styled.div`\n  padding-top: 64px;\n`\n\nfunction App() {\n\n  return (\n    <Root>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/post-list\">\n            <PostListPage />\n          </Route>\n          <Route path=\"/post/:id\">\n            <PostPage />\n          </Route>\n          <Route path=\"/new-post\">\n            <NewPostPage />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/edit-post/:id\">\n            <EditPostPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Root>\n  )\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport postReducer from './reducers/postReducer';\r\nimport userReducer from './reducers/userReducer'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    posts: postReducer,\r\n    users: userReducer,\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}